{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Crowd_prediction\\\\Frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { login as loginUser, register as registerUser } from \"../services/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n\n  // If token exists on reload, keep user logged in\n  useEffect(() => {\n    if (token) {\n      setUser({\n        username: localStorage.getItem(\"username\")\n      });\n    }\n  }, [token]);\n\n  // Handle login\n  const login = async credentials => {\n    try {\n      const response = await loginUser(credentials);\n      setToken(response.access_token);\n      localStorage.setItem(\"token\", response.access_token);\n      localStorage.setItem(\"username\", credentials.username);\n      setUser({\n        username: credentials.username\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      return false;\n    }\n  };\n\n  // Handle register\n  const register = async data => {\n    try {\n      const response = await registerUser(data);\n      return response;\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n      throw error;\n    }\n  };\n\n  // Handle logout\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"eNbUtTvdgxCMZ7p5xoW/6TChMg8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","login","loginUser","register","registerUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","username","credentials","response","access_token","setItem","error","console","data","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Crowd_prediction/Frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { login as loginUser, register as registerUser } from \"../services/auth\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n\r\n  // If token exists on reload, keep user logged in\r\n  useEffect(() => {\r\n    if (token) {\r\n      setUser({ username: localStorage.getItem(\"username\") });\r\n    }\r\n  }, [token]);\r\n\r\n  // Handle login\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await loginUser(credentials);\r\n      setToken(response.access_token);\r\n      localStorage.setItem(\"token\", response.access_token);\r\n      localStorage.setItem(\"username\", credentials.username);\r\n      setUser({ username: credentials.username });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Login failed\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Handle register\r\n  const register = async (data) => {\r\n    try {\r\n      const response = await registerUser(data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Registration failed\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Handle logout\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        login,\r\n        register,\r\n        logout,\r\n        isAuthenticated: !!user,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,IAAIC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;;EAEzE;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIa,KAAK,EAAE;MACTD,OAAO,CAAC;QAAEK,QAAQ,EAAEF,YAAY,CAACC,OAAO,CAAC,UAAU;MAAE,CAAC,CAAC;IACzD;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMZ,KAAK,GAAG,MAAOiB,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,SAAS,CAACgB,WAAW,CAAC;MAC7CJ,QAAQ,CAACK,QAAQ,CAACC,YAAY,CAAC;MAC/BL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACC,YAAY,CAAC;MACpDL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEH,WAAW,CAACD,QAAQ,CAAC;MACtDL,OAAO,CAAC;QAAEK,QAAQ,EAAEC,WAAW,CAACD;MAAS,CAAC,CAAC;MAC3C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAMnB,QAAQ,GAAG,MAAOqB,IAAI,IAAK;IAC/B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMf,YAAY,CAACoB,IAAI,CAAC;MACzC,OAAOL,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCX,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC;EACrC,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IACnBC,KAAK,EAAE;MACLjB,IAAI;MACJE,KAAK;MACLZ,KAAK;MACLE,QAAQ;MACRsB,MAAM;MACNI,eAAe,EAAE,CAAC,CAAClB;IACrB,CAAE;IAAAF,QAAA,EAEDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CA3DWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}