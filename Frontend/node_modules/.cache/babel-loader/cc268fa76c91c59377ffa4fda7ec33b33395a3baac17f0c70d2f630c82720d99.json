{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Crowd_prediction\\\\Frontend\\\\src\\\\components\\\\Dashboard\\\\StationCard.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CROWD_LEVELS } from \"../../utils/constants\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StationCard = ({\n  station\n}) => {\n  var _station$current_crow;\n  const crowdLevel = station.current_crowd_level ? Math.round(station.current_crowd_level) : null;\n  const crowdInfo = crowdLevel ? CROWD_LEVELS[crowdLevel] : null;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: /stations/,\n    className: \"station-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: station.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"crowd-value\",\n      children: station.line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crowd-status\",\n      children: crowdInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"crowd-level\",\n          style: {\n            color: crowdInfo.color\n          },\n          children: crowdInfo.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"crowd-value\",\n          children: [(_station$current_crow = station.current_crowd_level) === null || _station$current_crow === void 0 ? void 0 : _station$current_crow.toFixed(1), \" / 5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-data\",\n        children: \"No recent reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = StationCard;\nexport default StationCard;\nvar _c;\n$RefreshReg$(_c, \"StationCard\");","map":{"version":3,"names":["React","Link","CROWD_LEVELS","jsxDEV","_jsxDEV","Fragment","_Fragment","StationCard","station","_station$current_crow","crowdLevel","current_crowd_level","Math","round","crowdInfo","to","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","line","style","color","label","toFixed","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Crowd_prediction/Frontend/src/components/Dashboard/StationCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CROWD_LEVELS } from \"../../utils/constants\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst StationCard = ({ station }) => {\r\n  const crowdLevel = station.current_crowd_level\r\n    ? Math.round(station.current_crowd_level)\r\n    : null;\r\n  const crowdInfo = crowdLevel ? CROWD_LEVELS[crowdLevel] : null;\r\n\r\n  return (\r\n    <Link to={/stations/} className=\"station-card\">\r\n      <h4>{station.name}</h4>\r\n      <p className=\"crowd-value\">{station.line}</p>\r\n      <div className=\"crowd-status\">\r\n        {crowdInfo ? (\r\n          <>\r\n            <span\r\n              className=\"crowd-level\"\r\n              style={{ color: crowdInfo.color }}\r\n            >\r\n              {crowdInfo.label}\r\n            </span>\r\n            <span className=\"crowd-value\">\r\n              {station.current_crowd_level?.toFixed(1)} / 5\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <span className=\"no-data\">No recent reports</span>\r\n        )}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default StationCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAA,IAAAC,qBAAA;EACnC,MAAMC,UAAU,GAAGF,OAAO,CAACG,mBAAmB,GAC1CC,IAAI,CAACC,KAAK,CAACL,OAAO,CAACG,mBAAmB,CAAC,GACvC,IAAI;EACR,MAAMG,SAAS,GAAGJ,UAAU,GAAGR,YAAY,CAACQ,UAAU,CAAC,GAAG,IAAI;EAE9D,oBACEN,OAAA,CAACH,IAAI;IAACc,EAAE,EAAE,UAAW;IAACC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5Cb,OAAA;MAAAa,QAAA,EAAKT,OAAO,CAACU;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBlB,OAAA;MAAGY,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAET,OAAO,CAACe;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ClB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BH,SAAS,gBACRV,OAAA,CAAAE,SAAA;QAAAW,QAAA,gBACEb,OAAA;UACEY,SAAS,EAAC,aAAa;UACvBQ,KAAK,EAAE;YAAEC,KAAK,EAAEX,SAAS,CAACW;UAAM,CAAE;UAAAR,QAAA,EAEjCH,SAAS,CAACY;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACPlB,OAAA;UAAMY,SAAS,EAAC,aAAa;UAAAC,QAAA,IAAAR,qBAAA,GAC1BD,OAAO,CAACG,mBAAmB,cAAAF,qBAAA,uBAA3BA,qBAAA,CAA6BkB,OAAO,CAAC,CAAC,CAAC,EAAC,MAC3C;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eACP,CAAC,gBAEHlB,OAAA;QAAMY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACM,EAAA,GA7BIrB,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}