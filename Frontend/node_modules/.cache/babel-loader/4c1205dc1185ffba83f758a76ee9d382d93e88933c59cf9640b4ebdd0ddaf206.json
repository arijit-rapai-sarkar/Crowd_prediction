{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Frontend\\\\src\\\\components\\\\Dashboard\\\\CrowdChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst CrowdChart = ({\n  stations\n}) => {\n  if (!stations || stations.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No station data for chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n  const labels = stations.map(s => s.name);\n  const crowdLevels = stations.map(s => s.current_crowd_level || 3);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Current Crowd Levels\",\n      data: crowdLevels,\n      borderColor: \"#42a5f5\",\n      backgroundColor: \"rgba(66, 165, 245, 0.2)\",\n      tension: 0.3,\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Crowd Levels Across Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = CrowdChart;\nexport default CrowdChart;\nvar _c;\n$RefreshReg$(_c, \"CrowdChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","CrowdChart","stations","length","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","s","name","crowdLevels","current_crowd_level","data","datasets","label","borderColor","backgroundColor","tension","fill","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Frontend/src/components/Dashboard/CrowdChart.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst CrowdChart = ({ stations }) => {\r\n  if (!stations || stations.length === 0)\r\n    return <p>No station data for chart</p>;\r\n\r\n  const labels = stations.map((s) => s.name);\r\n  const crowdLevels = stations.map((s) => s.current_crowd_level || 3);\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Current Crowd Levels\",\r\n        data: crowdLevels,\r\n        borderColor: \"#42a5f5\",\r\n        backgroundColor: \"rgba(66, 165, 245, 0.2)\",\r\n        tension: 0.3,\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Crowd Levels Across Stations</h3>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrowdChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBR,OAAO,CAACS,QAAQ,CACdR,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EACpC,oBAAOJ,OAAA;IAAAK,QAAA,EAAG;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEzC,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC;EAC1C,MAAMC,WAAW,GAAGX,QAAQ,CAACQ,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACG,mBAAmB,IAAI,CAAC,CAAC;EAEnE,MAAMC,IAAI,GAAG;IACXN,MAAM;IACNO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,sBAAsB;MAC7BF,IAAI,EAAEF,WAAW;MACjBK,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE,GAAG;MACZC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,oBACEtB,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCT,OAAA,CAACV,IAAI;MAAC0B,IAAI,EAAEA;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACc,EAAA,GA3BIrB,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}