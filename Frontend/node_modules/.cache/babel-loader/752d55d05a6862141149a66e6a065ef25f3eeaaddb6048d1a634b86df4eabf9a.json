{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Crowd_prediction\\\\Frontend\\\\src\\\\components\\\\Stations\\\\StationDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport stationService from \"../../services/stations\";\nimport CrowdReportForm from \"./CrowdReportForm\";\nimport { CROWD_LEVELS, CHART_COLORS, DEFAULT_MAP_CENTER } from \"../../utils/constants\";\nimport \"./Stations.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\"\n});\nconst StationDetail = () => {\n  _s();\n  var _station$current_crow, _analytics$peak_hours;\n  const {\n    id\n  } = useParams();\n  const [station, setStation] = useState(null);\n  const [reports, setReports] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [analytics, setAnalytics] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showReportForm, setShowReportForm] = useState(false);\n  const fetchStationData = useCallback(async () => {\n    try {\n      var _predictionsData$pred;\n      setLoading(true);\n      const [stationData, reportsData, predictionsData, analyticsData] = await Promise.all([stationService.getById(id), stationService.getStationReports(id, 24), stationService.getHourlyPredictions(id, 24), stationService.getStationAnalytics(id, 7)]);\n      setStation(stationData);\n      setReports(reportsData);\n      setPredictions((_predictionsData$pred = predictionsData === null || predictionsData === void 0 ? void 0 : predictionsData.predictions) !== null && _predictionsData$pred !== void 0 ? _predictionsData$pred : []);\n      setAnalytics(analyticsData);\n    } catch (error) {\n      console.error(\"Error fetching station data\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    fetchStationData();\n  }, [fetchStationData]);\n  const handleReportSubmit = async (crowdLevel, description) => {\n    try {\n      await stationService.createCrowdReport(id, crowdLevel, description);\n      setShowReportForm(false);\n      await fetchStationData();\n    } catch (error) {\n      console.error(\"Error submitting report\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading station details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  if (!station) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Station not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  const crowdLevel = station.current_crowd_level ? Math.round(station.current_crowd_level) : null;\n  const crowdInfo = crowdLevel ? CROWD_LEVELS[crowdLevel] : null;\n  const hasCoordinates = typeof station.latitude === \"number\" && typeof station.longitude === \"number\";\n  const mapCenter = hasCoordinates ? [station.latitude, station.longitude] : DEFAULT_MAP_CENTER;\n  const chartData = {\n    labels: predictions.map(prediction => new Date(prediction.time).toLocaleTimeString([], {\n      hour: \"2-digit\"\n    })),\n    datasets: [{\n      label: \"Predicted Crowd Level\",\n      data: predictions.map(prediction => prediction.predicted_crowd_level),\n      borderColor: CHART_COLORS.primary,\n      backgroundColor: CHART_COLORS.primaryBg,\n      tension: 0.4,\n      fill: true\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Next 24 Hours\"\n      }\n    },\n    scales: {\n      y: {\n        min: 0,\n        max: 5,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"station-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: station.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"station-meta\",\n          children: [station.line, \" - \", station.station_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"report-btn\",\n        onClick: () => setShowReportForm(true),\n        children: \"Report Crowd Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status\",\n          children: crowdInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-indicator\",\n              style: {\n                backgroundColor: crowdInfo.color\n              },\n              children: crowdInfo.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Crowd Level: \", (_station$current_crow = station.current_crowd_level) === null || _station$current_crow === void 0 ? void 0 : _station$current_crow.toFixed(1), \"/5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No recent reports available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Station Analytics (7 days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), analytics ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Reports:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: analytics.total_reports\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Crowd:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: analytics.average_crowd_level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Peak Hours:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: (_analytics$peak_hours = analytics.peak_hours) !== null && _analytics$peak_hours !== void 0 && _analytics$peak_hours.length ? analytics.peak_hours.join(\", \") : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-data\",\n          children: \"Analytics unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: predictions.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No predictions available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Station Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter || DEFAULT_MAP_CENTER,\n          zoom: 15,\n          style: {\n            height: \"300px\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 OpenStreetMap contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), hasCoordinates && /*#__PURE__*/_jsxDEV(Marker, {\n            position: [station.latitude, station.longitude],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [station.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), station.line]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-reports\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), reports.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-list\",\n        children: reports.slice(0, 5).map(report => {\n          const levelInfo = CROWD_LEVELS[report.crowd_level] || CROWD_LEVELS[3];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report-level\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"level-badge\",\n                style: {\n                  backgroundColor: `${levelInfo.color}20`,\n                  color: levelInfo.color\n                },\n                children: levelInfo.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report-details\",\n              children: [report.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: report.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"report-time\",\n                children: new Date(report.created_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, report.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No reports yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), showReportForm && /*#__PURE__*/_jsxDEV(CrowdReportForm, {\n      onSubmit: handleReportSubmit,\n      onClose: () => setShowReportForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(StationDetail, \"EpN/DJ0ENKMmaLUw5ze+el4vfAY=\", false, function () {\n  return [useParams];\n});\n_c = StationDetail;\nexport default StationDetail;\nvar _c;\n$RefreshReg$(_c, \"StationDetail\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useParams","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","MapContainer","Marker","Popup","TileLayer","L","stationService","CrowdReportForm","CROWD_LEVELS","CHART_COLORS","DEFAULT_MAP_CENTER","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","StationDetail","_s","_station$current_crow","_analytics$peak_hours","id","station","setStation","reports","setReports","predictions","setPredictions","analytics","setAnalytics","loading","setLoading","showReportForm","setShowReportForm","fetchStationData","_predictionsData$pred","stationData","reportsData","predictionsData","analyticsData","Promise","all","getById","getStationReports","getHourlyPredictions","getStationAnalytics","error","console","handleReportSubmit","crowdLevel","description","createCrowdReport","className","children","fileName","_jsxFileName","lineNumber","columnNumber","current_crowd_level","Math","round","crowdInfo","hasCoordinates","latitude","longitude","mapCenter","chartData","labels","map","prediction","Date","time","toLocaleTimeString","hour","datasets","label","data","predicted_crowd_level","borderColor","primary","backgroundColor","primaryBg","tension","fill","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","min","max","ticks","stepSize","name","line","station_type","onClick","style","color","toFixed","total_reports","average_crowd_level","peak_hours","length","join","options","center","zoom","height","width","url","attribution","slice","report","levelInfo","crowd_level","created_at","toLocaleString","onSubmit","onClose","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Crowd_prediction/Frontend/src/components/Stations/StationDetail.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport stationService from \"../../services/stations\";\r\nimport CrowdReportForm from \"./CrowdReportForm\";\r\nimport { CROWD_LEVELS, CHART_COLORS, DEFAULT_MAP_CENTER } from \"../../utils/constants\";\r\nimport \"./Stations.css\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\r\n  iconUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n  shadowUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n});\r\n\r\nconst StationDetail = () => {\r\n  const { id } = useParams();\r\n  const [station, setStation] = useState(null);\r\n  const [reports, setReports] = useState([]);\r\n  const [predictions, setPredictions] = useState([]);\r\n  const [analytics, setAnalytics] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showReportForm, setShowReportForm] = useState(false);\r\n\r\n  const fetchStationData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [stationData, reportsData, predictionsData, analyticsData] =\r\n        await Promise.all([\r\n          stationService.getById(id),\r\n          stationService.getStationReports(id, 24),\r\n          stationService.getHourlyPredictions(id, 24),\r\n          stationService.getStationAnalytics(id, 7),\r\n        ]);\r\n\r\n      setStation(stationData);\r\n      setReports(reportsData);\r\n      setPredictions(predictionsData?.predictions ?? []);\r\n      setAnalytics(analyticsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching station data\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchStationData();\r\n  }, [fetchStationData]);\r\n\r\n  const handleReportSubmit = async (crowdLevel, description) => {\r\n    try {\r\n      await stationService.createCrowdReport(id, crowdLevel, description);\r\n      setShowReportForm(false);\r\n      await fetchStationData();\r\n    } catch (error) {\r\n      console.error(\"Error submitting report\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading station details...</div>;\r\n  }\r\n\r\n  if (!station) {\r\n    return <div className=\"error\">Station not found</div>;\r\n  }\r\n\r\n  const crowdLevel = station.current_crowd_level\r\n    ? Math.round(station.current_crowd_level)\r\n    : null;\r\n  const crowdInfo = crowdLevel ? CROWD_LEVELS[crowdLevel] : null;\r\n  const hasCoordinates = typeof station.latitude === \"number\" && typeof station.longitude === \"number\";\r\n  const mapCenter = hasCoordinates ? [station.latitude, station.longitude] : DEFAULT_MAP_CENTER;\r\n\r\n  const chartData = {\r\n    labels: predictions.map((prediction) =>\r\n      new Date(prediction.time).toLocaleTimeString([], { hour: \"2-digit\" })\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"Predicted Crowd Level\",\r\n        data: predictions.map((prediction) => prediction.predicted_crowd_level),\r\n        borderColor: CHART_COLORS.primary,\r\n        backgroundColor: CHART_COLORS.primaryBg,\r\n        tension: 0.4,\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { position: \"top\" },\r\n      title: { display: true, text: \"Next 24 Hours\" },\r\n    },\r\n    scales: {\r\n      y: {\r\n        min: 0,\r\n        max: 5,\r\n        ticks: { stepSize: 1 },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"station-detail\">\r\n      <div className=\"detail-header\">\r\n        <div>\r\n          <h2>{station.name}</h2>\r\n          <p className=\"station-meta\">\r\n            {station.line} - {station.station_type}\r\n          </p>\r\n        </div>\r\n        <button\r\n          className=\"report-btn\"\r\n          onClick={() => setShowReportForm(true)}\r\n        >\r\n          Report Crowd Level\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"detail-grid\">\r\n        <div className=\"detail-section\">\r\n          <h3>Current Status</h3>\r\n          <div className=\"current-status\">\r\n            {crowdInfo ? (\r\n              <>\r\n                <div\r\n                  className=\"status-indicator\"\r\n                  style={{ backgroundColor: crowdInfo.color }}\r\n                >\r\n                  {crowdInfo.label}\r\n                </div>\r\n                <p>Crowd Level: {station.current_crowd_level?.toFixed(1)}/5</p>\r\n              </>\r\n            ) : (\r\n              <p className=\"no-data\">No recent reports available</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"detail-section\">\r\n          <h3>Station Analytics (7 days)</h3>\r\n          {analytics ? (\r\n            <div className=\"analytics-stats\">\r\n              <div className=\"stat\">\r\n                <span className=\"stat-label\">Total Reports:</span>\r\n                <span className=\"stat-value\">{analytics.total_reports}</span>\r\n              </div>\r\n              <div className=\"stat\">\r\n                <span className=\"stat-label\">Average Crowd:</span>\r\n                <span className=\"stat-value\">{analytics.average_crowd_level}</span>\r\n              </div>\r\n              <div className=\"stat\">\r\n                <span className=\"stat-label\">Peak Hours:</span>\r\n                <span className=\"stat-value\">\r\n                  {analytics.peak_hours?.length\r\n                    ? analytics.peak_hours.join(\", \")\r\n                    : \"N/A\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p className=\"no-data\">Analytics unavailable</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-section\">\r\n        {predictions.length > 0 ? (\r\n          <Line data={chartData} options={chartOptions} />\r\n        ) : (\r\n          <p className=\"no-data\">No predictions available</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"map-section\">\r\n        <h3>Station Location</h3>\r\n        <div className=\"map-container\">\r\n          <MapContainer\r\n            center={mapCenter || DEFAULT_MAP_CENTER}\r\n            zoom={15}\r\n            style={{ height: \"300px\", width: \"100%\" }}\r\n          >\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution=\"&copy; OpenStreetMap contributors\"\r\n            />\r\n            {hasCoordinates && (\r\n              <Marker position={[station.latitude, station.longitude]}>\r\n                <Popup>\r\n                  {station.name}\r\n                  <br />\r\n                  {station.line}\r\n                </Popup>\r\n              </Marker>\r\n            )}\r\n          </MapContainer>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"recent-reports\">\r\n        <h3>Recent Reports</h3>\r\n        {reports.length > 0 ? (\r\n          <div className=\"reports-list\">\r\n            {reports.slice(0, 5).map((report) => {\r\n              const levelInfo = CROWD_LEVELS[report.crowd_level] || CROWD_LEVELS[3];\r\n              return (\r\n                <div key={report.id} className=\"report-item\">\r\n                  <div className=\"report-level\">\r\n                    <span\r\n                      className=\"level-badge\"\r\n                      style={{\r\n                        backgroundColor: `${levelInfo.color}20`,\r\n                        color: levelInfo.color,\r\n                      }}\r\n                    >\r\n                      {levelInfo.label}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"report-details\">\r\n                    {report.description && <p>{report.description}</p>}\r\n                    <span className=\"report-time\">\r\n                      {new Date(report.created_at).toLocaleString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p className=\"no-data\">No reports yet</p>\r\n        )}\r\n      </div>\r\n\r\n      {showReportForm && (\r\n        <CrowdReportForm\r\n          onSubmit={handleReportSubmit}\r\n          onClose={() => setShowReportForm(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StationDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}