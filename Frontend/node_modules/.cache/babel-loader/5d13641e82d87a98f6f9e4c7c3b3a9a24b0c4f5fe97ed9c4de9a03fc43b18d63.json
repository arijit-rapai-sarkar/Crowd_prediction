{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Crowd_prediction\\\\Frontend\\\\src\\\\components\\\\Dashboard\\\\CrowdChart.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { CHART_COLORS } from \"../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst CrowdChart = ({\n  stations = []\n}) => {\n  if (!stations.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-data\",\n      children: \"No station data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const labels = stations.map(station => station.name);\n  const crowdLevels = stations.map(station => station.current_crowd_level ? Number(station.current_crowd_level.toFixed(2)) : 0);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Current Crowd Level\",\n      data: crowdLevels,\n      borderColor: CHART_COLORS.primary,\n      backgroundColor: CHART_COLORS.primaryBg,\n      fill: true,\n      tension: 0.35,\n      pointRadius: 3\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: context => `${context.raw} / 5`\n        }\n      }\n    },\n    scales: {\n      y: {\n        min: 0,\n        max: 5,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"320px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c = CrowdChart;\nexport default CrowdChart;\nvar _c;\n$RefreshReg$(_c, \"CrowdChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CHART_COLORS","jsxDEV","_jsxDEV","register","CrowdChart","stations","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","station","name","crowdLevels","current_crowd_level","Number","toFixed","data","datasets","label","borderColor","primary","backgroundColor","primaryBg","fill","tension","pointRadius","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","tooltip","callbacks","context","raw","scales","y","min","max","ticks","stepSize","style","height","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Crowd_prediction/Frontend/src/components/Dashboard/CrowdChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { CHART_COLORS } from \"../../utils/constants\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst CrowdChart = ({ stations = [] }) => {\r\n  if (!stations.length) {\r\n    return <p className=\"no-data\">No station data available</p>;\r\n  }\r\n\r\n  const labels = stations.map((station) => station.name);\r\n  const crowdLevels = stations.map((station) =>\r\n    station.current_crowd_level ? Number(station.current_crowd_level.toFixed(2)) : 0\r\n  );\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Current Crowd Level\",\r\n        data: crowdLevels,\r\n        borderColor: CHART_COLORS.primary,\r\n        backgroundColor: CHART_COLORS.primaryBg,\r\n        fill: true,\r\n        tension: 0.35,\r\n        pointRadius: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: \"top\" },\r\n      title: { display: false },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => `${context.raw} / 5`,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        min: 0,\r\n        max: 5,\r\n        ticks: {\r\n          stepSize: 1,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"320px\" }}>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrowdChart;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErDV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,UAAU,GAAGA,CAAC;EAAEC,QAAQ,GAAG;AAAG,CAAC,KAAK;EACxC,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAE;IACpB,oBAAOJ,OAAA;MAAGK,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7D;EAEA,MAAMC,MAAM,GAAGR,QAAQ,CAACS,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC;EACtD,MAAMC,WAAW,GAAGZ,QAAQ,CAACS,GAAG,CAAEC,OAAO,IACvCA,OAAO,CAACG,mBAAmB,GAAGC,MAAM,CAACJ,OAAO,CAACG,mBAAmB,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CACjF,CAAC;EAED,MAAMC,IAAI,GAAG;IACXR,MAAM;IACNS,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,qBAAqB;MAC5BF,IAAI,EAAEJ,WAAW;MACjBO,WAAW,EAAExB,YAAY,CAACyB,OAAO;MACjCC,eAAe,EAAE1B,YAAY,CAAC2B,SAAS;MACvCC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QAAEC,QAAQ,EAAE;MAAM,CAAC;MAC3BC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC;MACzBC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTjB,KAAK,EAAGkB,OAAO,IAAK,GAAGA,OAAO,CAACC,GAAG;QACpC;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE;UACLC,QAAQ,EAAE;QACZ;MACF;IACF;EACF,CAAC;EAED,oBACE9C,OAAA;IAAK+C,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAA1C,QAAA,eAC9BN,OAAA,CAACZ,IAAI;MAAC+B,IAAI,EAAEA,IAAK;MAACU,OAAO,EAAEA;IAAQ;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACuC,EAAA,GArDI/C,UAAU;AAuDhB,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}