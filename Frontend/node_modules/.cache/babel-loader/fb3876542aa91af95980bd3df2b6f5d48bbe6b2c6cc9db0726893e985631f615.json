{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Frontend\\\\src\\\\components\\\\Analytics\\\\HeatMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, CircleMarker, Tooltip } from \"react-leaflet\";\nimport { getStations } from \"../../services/stations\";\nimport { CROWD_COLORS, CROWD_LEVELS } from \"../../utils/constants\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatMap = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  useEffect(() => {\n    const fetchStations = async () => {\n      try {\n        const data = await getStations();\n        setStations(data);\n      } catch (error) {\n        console.error(\"Failed to fetch stations for heatmap\", error);\n      }\n    };\n    fetchStations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [28.6139, 77.209] // default center (Delhi as placeholder)\n    ,\n    zoom: 11,\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 OpenStreetMap contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), stations.map(station => /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: [station.latitude, station.longitude],\n      radius: 10,\n      fillOpacity: 0.7,\n      color: CROWD_COLORS[station.current_crowd_level || 3],\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: station.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \"Current: \", CROWD_LEVELS[station.current_crowd_level || 3]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, station.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(HeatMap, \"KV8CcP3gcIUxQ2C9moSCRW/KKrI=\");\n_c = HeatMap;\nexport default HeatMap;\nvar _c;\n$RefreshReg$(_c, \"HeatMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","CircleMarker","Tooltip","getStations","CROWD_COLORS","CROWD_LEVELS","jsxDEV","_jsxDEV","HeatMap","_s","stations","setStations","fetchStations","data","error","console","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","station","latitude","longitude","radius","fillOpacity","color","current_crowd_level","name","id","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Frontend/src/components/Analytics/HeatMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, CircleMarker, Tooltip } from \"react-leaflet\";\r\nimport { getStations } from \"../../services/stations\";\r\nimport { CROWD_COLORS, CROWD_LEVELS } from \"../../utils/constants\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst HeatMap = () => {\r\n  const [stations, setStations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchStations = async () => {\r\n      try {\r\n        const data = await getStations();\r\n        setStations(data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch stations for heatmap\", error);\r\n      }\r\n    };\r\n    fetchStations();\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[28.6139, 77.209]} // default center (Delhi as placeholder)\r\n      zoom={11}\r\n      style={{ height: \"400px\", width: \"100%\" }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution=\"Â© OpenStreetMap contributors\"\r\n      />\r\n\r\n      {stations.map((station) => (\r\n        <CircleMarker\r\n          key={station.id}\r\n          center={[station.latitude, station.longitude]}\r\n          radius={10}\r\n          fillOpacity={0.7}\r\n          color={CROWD_COLORS[station.current_crowd_level || 3]}\r\n        >\r\n          <Tooltip>\r\n            <strong>{station.name}</strong>\r\n            <br />\r\n            Current: {CROWD_LEVELS[station.current_crowd_level || 3]}\r\n          </Tooltip>\r\n        </CircleMarker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default HeatMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC9E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,YAAY,EAAEC,YAAY,QAAQ,uBAAuB;AAClE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,WAAW,CAAC,CAAC;QAChCQ,WAAW,CAACE,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IACDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACR,YAAY;IACXiB,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,CAAE,CAAC;IAAA;IAC3BC,IAAI,EAAE,EAAG;IACTC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAE1Cd,OAAA,CAACP,SAAS;MACRsB,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAEDjB,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBACpBtB,OAAA,CAACN,YAAY;MAEXe,MAAM,EAAE,CAACa,OAAO,CAACC,QAAQ,EAAED,OAAO,CAACE,SAAS,CAAE;MAC9CC,MAAM,EAAE,EAAG;MACXC,WAAW,EAAE,GAAI;MACjBC,KAAK,EAAE9B,YAAY,CAACyB,OAAO,CAACM,mBAAmB,IAAI,CAAC,CAAE;MAAAd,QAAA,eAEtDd,OAAA,CAACL,OAAO;QAAAmB,QAAA,gBACNd,OAAA;UAAAc,QAAA,EAASQ,OAAO,CAACO;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC/BpB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,aACG,EAACtB,YAAY,CAACwB,OAAO,CAACM,mBAAmB,IAAI,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC,GAVLE,OAAO,CAACQ,EAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWH,CACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAAClB,EAAA,CA3CID,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}