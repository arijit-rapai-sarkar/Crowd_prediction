{"ast":null,"code":"import API from \"./api\";\n\n// Get all stations\nexport const getStations = async () => {\n  const response = await API.get(\"/stations\");\n  return response.data;\n};\n\n// Get single station by ID\nexport const getStation = async id => {\n  const response = await API.get(`/stations/${id}`);\n  return response.data;\n};\n\n// Submit a crowd report\nexport const submitCrowdReport = async data => {\n  const response = await API.post(\"/crowd-reports\", data);\n  return response.data;\n};\n\n// Get predictions for a station\nexport const getStationPredictions = async id => {\n  const response = await API.get(`/predictions/station/${id}`);\n  return response.data;\n};\n\n// Get hourly predictions for a station\nexport const getHourlyPredictions = async (id, hours = 24) => {\n  const response = await API.get(`/predictions/hourly/${id}?hours=${hours}`);\n  return response.data;\n};\n\n// Get station-level analytics\nexport const getStationAnalytics = async id => {\n  const response = await API.get(`/analytics/station/${id}`);\n  return response.data;\n};\n\n// Get system-wide analytics\nexport const getSystemAnalytics = async () => {\n  const response = await API.get(\"/analytics/system\");\n  return response.data;\n};","map":{"version":3,"names":["API","getStations","response","get","data","getStation","id","submitCrowdReport","post","getStationPredictions","getHourlyPredictions","hours","getStationAnalytics","getSystemAnalytics"],"sources":["C:/suro/Crowd_prediction/Frontend/src/services/stations.js"],"sourcesContent":["import API from \"./api\";\r\n\r\n// Get all stations\r\nexport const getStations = async () => {\r\n  const response = await API.get(\"/stations\");\r\n  return response.data;\r\n};\r\n\r\n// Get single station by ID\r\nexport const getStation = async (id) => {\r\n  const response = await API.get(`/stations/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Submit a crowd report\r\nexport const submitCrowdReport = async (data) => {\r\n  const response = await API.post(\"/crowd-reports\", data);\r\n  return response.data;\r\n};\r\n\r\n// Get predictions for a station\r\nexport const getStationPredictions = async (id) => {\r\n  const response = await API.get(`/predictions/station/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Get hourly predictions for a station\r\nexport const getHourlyPredictions = async (id, hours = 24) => {\r\n  const response = await API.get(`/predictions/hourly/${id}?hours=${hours}`);\r\n  return response.data;\r\n};\r\n\r\n// Get station-level analytics\r\nexport const getStationAnalytics = async (id) => {\r\n  const response = await API.get(`/analytics/station/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Get system-wide analytics\r\nexport const getSystemAnalytics = async () => {\r\n  const response = await API.get(\"/analytics/system\");\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAaG,EAAE,EAAE,CAAC;EACjD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,iBAAiB,GAAG,MAAOH,IAAI,IAAK;EAC/C,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACQ,IAAI,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;EACvD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMK,qBAAqB,GAAG,MAAOH,EAAE,IAAK;EACjD,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,wBAAwBG,EAAE,EAAE,CAAC;EAC5D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,oBAAoB,GAAG,MAAAA,CAAOJ,EAAE,EAAEK,KAAK,GAAG,EAAE,KAAK;EAC5D,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,uBAAuBG,EAAE,UAAUK,KAAK,EAAE,CAAC;EAC1E,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMQ,mBAAmB,GAAG,MAAON,EAAE,IAAK;EAC/C,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,sBAAsBG,EAAE,EAAE,CAAC;EAC1D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,mBAAmB,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}