{"ast":null,"code":"var _jsxFileName = \"C:\\\\suro\\\\Crowd_prediction\\\\Crowd_prediction\\\\Frontend\\\\src\\\\components\\\\Stations\\\\StationList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport stationService from \"../../services/stations\";\nimport { CROWD_LEVELS } from \"../../utils/constants\";\nimport \"./Stations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StationList = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState(\"all\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchStations();\n  }, []);\n  const fetchStations = async () => {\n    try {\n      setLoading(true);\n      const data = await stationService.getAll();\n      setStations(data);\n    } catch (error) {\n      console.error(\"Error fetching stations\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filteredStations = stations.filter(station => {\n    if (filter === \"all\") return true;\n    return station.station_type === filter;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading stations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"station-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-buttons\",\n        children: [[\"all\", \"All\"], [\"metro\", \"Metro\"], [\"bus\", \"Bus\"], [\"train\", \"Train\"]].map(([value, label]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === value ? \"active\" : \"\",\n          onClick: () => setFilter(value),\n          children: label\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stations-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Station Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredStations.map(station => {\n            const crowdLevel = station.current_crowd_level ? Math.round(station.current_crowd_level) : null;\n            const crowdInfo = crowdLevel && CROWD_LEVELS[crowdLevel] ? CROWD_LEVELS[crowdLevel] : null;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: station.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: station.line\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `type-badge ${station.station_type}`,\n                  children: station.station_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: crowdInfo ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"crowd-badge\",\n                  style: {\n                    backgroundColor: `${crowdInfo.color}20`,\n                    color: crowdInfo.color\n                  },\n                  children: crowdInfo.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"no-data\",\n                  children: \"No data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-btn\",\n                  onClick: () => navigate(`/stations/${station.id}`),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, station.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(StationList, \"n46lMYpCFG+iI5oPmLvWyXacpXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StationList;\nexport default StationList;\nvar _c;\n$RefreshReg$(_c, \"StationList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","stationService","CROWD_LEVELS","jsxDEV","_jsxDEV","StationList","_s","stations","setStations","loading","setLoading","filter","setFilter","navigate","fetchStations","data","getAll","error","console","filteredStations","station","station_type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","label","onClick","crowdLevel","current_crowd_level","Math","round","crowdInfo","name","line","style","backgroundColor","color","id","_c","$RefreshReg$"],"sources":["C:/suro/Crowd_prediction/Crowd_prediction/Frontend/src/components/Stations/StationList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport stationService from \"../../services/stations\";\r\nimport { CROWD_LEVELS } from \"../../utils/constants\";\r\nimport \"./Stations.css\";\r\n\r\nconst StationList = () => {\r\n  const [stations, setStations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchStations();\r\n  }, []);\r\n\r\n  const fetchStations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await stationService.getAll();\r\n      setStations(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching stations\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredStations = stations.filter((station) => {\r\n    if (filter === \"all\") return true;\r\n    return station.station_type === filter;\r\n  });\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading stations...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"station-list\">\r\n      <div className=\"list-header\">\r\n        <h2>All Stations</h2>\r\n        <div className=\"filter-buttons\">\r\n          {[\r\n            [\"all\", \"All\"],\r\n            [\"metro\", \"Metro\"],\r\n            [\"bus\", \"Bus\"],\r\n            [\"train\", \"Train\"],\r\n          ].map(([value, label]) => (\r\n            <button\r\n              key={value}\r\n              className={filter === value ? \"active\" : \"\"}\r\n              onClick={() => setFilter(value)}\r\n            >\r\n              {label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stations-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Station Name</th>\r\n              <th>Line</th>\r\n              <th>Type</th>\r\n              <th>Current Status</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredStations.map((station) => {\r\n              const crowdLevel = station.current_crowd_level\r\n                ? Math.round(station.current_crowd_level)\r\n                : null;\r\n              const crowdInfo =\r\n                crowdLevel && CROWD_LEVELS[crowdLevel]\r\n                  ? CROWD_LEVELS[crowdLevel]\r\n                  : null;\r\n\r\n              return (\r\n                <tr key={station.id}>\r\n                  <td>{station.name}</td>\r\n                  <td>{station.line}</td>\r\n                  <td>\r\n                    <span className={`type-badge ${station.station_type}`}>\r\n                      {station.station_type}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    {crowdInfo ? (\r\n                      <span\r\n                        className=\"crowd-badge\"\r\n                        style={{\r\n                          backgroundColor: `${crowdInfo.color}20`,\r\n                          color: crowdInfo.color,\r\n                        }}\r\n                      >\r\n                        {crowdInfo.label}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"no-data\">No data</span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"view-btn\"\r\n                      onClick={() => navigate(`/stations/${station.id}`)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}